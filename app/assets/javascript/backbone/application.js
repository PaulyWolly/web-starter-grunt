// Generated by CoffeeScript 1.7.1
(function() {
  var App, ProductModel, ProductView, ProductsCollection, ProductsView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ProductModel = (function(_super) {
    __extends(ProductModel, _super);

    function ProductModel() {
      return ProductModel.__super__.constructor.apply(this, arguments);
    }

    ProductModel.prototype.defaults = {
      name: 'Product'
    };

    return ProductModel;

  })(Backbone.Model);

  ProductsCollection = (function(_super) {
    __extends(ProductsCollection, _super);

    function ProductsCollection() {
      return ProductsCollection.__super__.constructor.apply(this, arguments);
    }

    ProductsCollection.prototype.model = ProductModel;

    return ProductsCollection;

  })(Backbone.Collection);

  ProductView = (function(_super) {
    __extends(ProductView, _super);

    function ProductView() {
      return ProductView.__super__.constructor.apply(this, arguments);
    }

    ProductView.prototype.model = ProductModel;

    ProductView.prototype.template = '#product__template';

    ProductView.prototype.className = 'item';

    ProductView.prototype.tagName = 'tr';

    ProductView.prototype.onRender = function() {
      return rivets.bind(this.el, {
        model: this.model
      });
    };

    return ProductView;

  })(Marionette.ItemView);

  ProductsView = (function(_super) {
    var appendHtml;

    __extends(ProductsView, _super);

    function ProductsView() {
      return ProductsView.__super__.constructor.apply(this, arguments);
    }

    ProductsView.prototype.itemView = ProductView;

    ProductsView.prototype.template = '#products__template';

    ProductsView.prototype.className = 'table listItems';

    ProductsView.prototype.tagName = 'table';

    appendHtml = function(collectionView, itemView) {
      return $(collectionView).append(itemView);
    };

    return ProductsView;

  })(Marionette.CollectionView);

  App = new Backbone.Marionette.Application;

  App.addRegions({
    mainRegion: '#main__region'
  });

  $(function() {
    var getProductsView;
    App.start;
    window.getProductsCollection = new ProductsCollection;
    getProductsCollection.add({
      name: 'Product 1'
    });
    getProductsCollection.add({
      name: 'Product 2'
    });
    getProductsCollection.add({
      name: 'Product 3'
    });
    getProductsView = new ProductsView({
      collection: window.getProductsCollection
    });
    return App.mainRegion.show(getProductsView);
  });

}).call(this);

//# sourceMappingURL=application.map
