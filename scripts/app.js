// Generated by CoffeeScript 1.7.1
(function() {
  var List, Product, ProductView, Products, ProductsView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Product = (function(_super) {
    __extends(Product, _super);

    function Product() {
      return Product.__super__.constructor.apply(this, arguments);
    }

    Product.prototype.defaults = {
      name: ''
    };

    Product.prototype.initialize = function() {
      return console.log('Init model');
    };

    return Product;

  })(Backbone.Model);

  Products = (function(_super) {
    __extends(Products, _super);

    function Products() {
      return Products.__super__.constructor.apply(this, arguments);
    }

    Products.prototype.initialize = function() {
      return console.log('Init collection');
    };

    return Products;

  })(Backbone.Collection);

  ProductView = (function(_super) {
    __extends(ProductView, _super);

    function ProductView() {
      return ProductView.__super__.constructor.apply(this, arguments);
    }

    ProductView.prototype.template = '#product__template';

    ProductView.prototype.tagName = 'div';

    ProductView.prototype.initialize = function() {
      return console.log('Init Product view');
    };

    return ProductView;

  })(Backbone.Marionette.ItemView);

  ProductsView = (function(_super) {
    var appendHtml;

    __extends(ProductsView, _super);

    function ProductsView() {
      return ProductsView.__super__.constructor.apply(this, arguments);
    }

    ProductsView.prototype.template = '#products__template';

    ProductsView.prototype.tagName = 'div';

    ProductsView.prototype.itemView = ProductView;

    ProductsView.prototype.initialize = function() {
      return console.log('Init Products view');
    };

    appendHtml = function(collectionView, itemView) {
      return $(collectionView).append(itemView.el);
    };

    return ProductsView;

  })(Backbone.Marionette.CompositeView);

  List = new Backbone.Marionette.Application;

  List.addRegions({
    mainRegion: '#list__region'
  });

  List.addInitializer(function(data) {
    var productView;
    productView = new ProductsView({
      collection: data.products
    });
    return List.mainRegion.show(productView);
  });

  $(function() {
    var products;
    products = new Products([
      new Product({
        name: 'Iphone'
      }), new Product({
        name: 'Samsung'
      }), new Product({
        name: 'Asus'
      })
    ]);
    return List.start({
      products: products
    });
  });

}).call(this);

//# sourceMappingURL=app.map
